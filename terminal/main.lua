-- terminal/main.lua
-- –ì–ª–∞–≤–Ω—ã–π —Ç–µ—Ä–º–∏–Ω–∞–ª—å–Ω—ã–π —Å–∫—Ä–∏–ø—Ç –¥–ª—è –∏–≥—Ä–æ–∫–æ–≤ –∫–∞–∑–∏–Ω–æ "Spartak"

local component = require("component")
local event = require("event")
local term = require("term")
local os = require("os")

-- –ó–∞–≥—Ä—É–∑–∫–∞ –±–∏–±–ª–∏–æ—Ç–µ–∫
package.path = package.path .. ";/home/casino/lib/?.lua;/home/casino/terminal/?.lua"
local Network = require("network")
local UI = require("ui")

-- –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
local gpu = component.gpu
local net = Network.new(false)  -- –ö–ª–∏–µ–Ω—Ç

-- –°–æ—Å—Ç–æ—è–Ω–∏–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
local state = {
    serverAddress = nil,
    playerName = nil,
    balance = 0,
    currentScreen = "login",
    selectedButton = 1,
    inputValue = ""
}

-- –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è
local CONFIG = {
    MIN_BET = 1,
    MAX_BET = 100
}

-- ============================================================================
-- –≠–ö–†–ê–ù –í–•–û–î–ê
-- ============================================================================

local function drawLoginScreen()
    UI.clear()
    
    local w, h = gpu.getResolution()
    
    -- –õ–æ–≥–æ—Ç–∏–ø
    UI.drawLogo(5)
    
    -- –ü–æ–ª–µ –≤–≤–æ–¥–∞
    UI.drawCentered(15, "–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å!", UI.COLORS.YELLOW)
    UI.drawCentered(17, "–í–≤–µ–¥–∏—Ç–µ –≤–∞—à –Ω–∏–∫:", UI.COLORS.WHITE)
    UI.drawInput(math.floor(w / 2) - 20, 19, 40, state.inputValue, true)
    
    -- –ö–Ω–æ–ø–∫–∞
    UI.drawButton(math.floor(w / 2) - 10, 22, "–í–û–ô–¢–ò", 20, true)
    
    -- –ü–æ–¥—Å–∫–∞–∑–∫–∞
    UI.drawCentered(h - 3, "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è –±–∞–ª–∞–Ω—Å–∞ –æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ NPC-–±–∞–Ω–∫–∏—Ä—É", UI.COLORS.GRAY)
end

local function handleLogin()
    if state.inputValue == "" then
        UI.showError("–í–≤–µ–¥–∏—Ç–µ –∏–º—è –∏–≥—Ä–æ–∫–∞!")
        event.pull("key_down")
        return
    end
    
    UI.showLoading("–ü–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ —Å–µ—Ä–≤–µ—Ä—É...")
    
    -- –ü–æ–∏—Å–∫ —Å–µ—Ä–≤–µ—Ä–∞
    if not state.serverAddress then
        local addr, err = net:findServer(5)
        if not addr then
            UI.showError("–°–µ—Ä–≤–µ—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω: " .. (err or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"))
            event.pull("key_down")
            return
        end
        state.serverAddress = addr
    end
    
    -- –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ –≤—Ö–æ–¥
    local response, err = net:request(state.serverAddress, Network.MSG_TYPES.LOGIN, {
        player = state.inputValue
    }, 5)
    
    if not response or not response.success then
        UI.showError("–û—à–∏–±–∫–∞ –≤—Ö–æ–¥–∞: " .. (err or response.error or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"))
        event.pull("key_down")
        return
    end
    
    -- –£—Å–ø–µ—à–Ω—ã–π –≤—Ö–æ–¥
    state.playerName = response.player
    state.balance = response.balance
    state.currentScreen = "menu"
    state.selectedButton = 1
end

-- ============================================================================
-- –ì–õ–ê–í–ù–û–ï –ú–ï–ù–Æ
-- ============================================================================

local function drawMainMenu()
    UI.clear()
    UI.drawHeader(state.playerName, state.balance)
    
    local w, h = gpu.getResolution()
    
    UI.drawCentered(5, "–í—ã–±–µ—Ä–∏—Ç–µ –∏–≥—Ä—É:", UI.COLORS.YELLOW)
    
    -- –ö–Ω–æ–ø–∫–∏ –∏–≥—Ä
    local buttonY = 8
    local buttonSpacing = 15
    
    -- –°–ª–æ—Ç—ã
    local slotsX = math.floor(w / 2) - 45
    UI.drawBox(slotsX, buttonY, 25, 10, nil, state.selectedButton == 1 and UI.COLORS.GOLD or UI.COLORS.GRAY)
    UI.drawCentered(buttonY + 2, "üé∞ –°–õ–û–¢–´", state.selectedButton == 1 and UI.COLORS.YELLOW or UI.COLORS.WHITE)
    UI.drawCentered(buttonY + 4, "–°—Ç–∞–≤–∫–∞: 1-100‚ÇΩ", UI.COLORS.WHITE)
    UI.drawButton(slotsX + 3, buttonY + 7, "–ò–ì–†–ê–¢–¨", 19, state.selectedButton == 1)
    
    -- –†—É–ª–µ—Ç–∫–∞
    local rouletteX = math.floor(w / 2) - 12
    UI.drawBox(rouletteX, buttonY, 25, 10, nil, state.selectedButton == 2 and UI.COLORS.GOLD or UI.COLORS.GRAY)
    UI.drawCentered(buttonY + 2, "üé° –†–£–õ–ï–¢–ö–ê", state.selectedButton == 2 and UI.COLORS.YELLOW or UI.COLORS.WHITE)
    UI.drawCentered(buttonY + 4, "–°—Ç–∞–≤–∫–∞: 1-100‚ÇΩ", UI.COLORS.WHITE)
    UI.drawButton(rouletteX + 3, buttonY + 7, "–ò–ì–†–ê–¢–¨", 19, state.selectedButton == 2)
    
    -- –ë–ª—ç–∫–¥–∂–µ–∫
    local blackjackX = math.floor(w / 2) + 20
    UI.drawBox(blackjackX, buttonY, 25, 10, nil, state.selectedButton == 3 and UI.COLORS.GOLD or UI.COLORS.GRAY)
    UI.drawCentered(buttonY + 2, "üÉè –ë–õ–≠–ö–î–ñ–ï–ö", state.selectedButton == 3 and UI.COLORS.YELLOW or UI.COLORS.WHITE)
    UI.drawCentered(buttonY + 4, "–°—Ç–∞–≤–∫–∞: 1-100‚ÇΩ", UI.COLORS.WHITE)
    UI.drawButton(blackjackX + 3, buttonY + 7, "–ò–ì–†–ê–¢–¨", 19, state.selectedButton == 3)
    
    -- –ë–∞–ª–∞–Ω—Å
    local balanceY = 20
    UI.drawBox(math.floor(w / 2) - 20, balanceY, 40, 8, " üí∞ –ú–û–ô –ë–ê–õ–ê–ù–° ", UI.COLORS.GOLD)
    UI.drawCentered(balanceY + 2, "–ë–∞–ª–∞–Ω—Å: " .. state.balance .. "‚ÇΩ", UI.COLORS.YELLOW)
    UI.drawCentered(balanceY + 4, "–î–ª—è –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è/–≤—ã–≤–æ–¥–∞", UI.COLORS.WHITE)
    UI.drawCentered(balanceY + 5, "–æ–±—Ä–∞—Ç–∏—Ç–µ—Å—å –∫ NPC-–±–∞–Ω–∫–∏—Ä—É", UI.COLORS.WHITE)
    
    -- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    UI.drawCentered(h - 3, "[‚Üê/‚Üí] –í—ã–±–æ—Ä  [Enter] –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å  [Q] –í—ã—Ö–æ–¥", UI.COLORS.GRAY)
end

local function handleMainMenu()
    local _, _, char, code = event.pull("key_down")
    
    -- –°—Ç—Ä–µ–ª–∫–∏ –≤–ª–µ–≤–æ/–≤–ø—Ä–∞–≤–æ
    if code == 203 then  -- –í–ª–µ–≤–æ
        state.selectedButton = state.selectedButton - 1
        if state.selectedButton < 1 then
            state.selectedButton = 3
        end
    elseif code == 205 then  -- –í–ø—Ä–∞–≤–æ
        state.selectedButton = state.selectedButton + 1
        if state.selectedButton > 3 then
            state.selectedButton = 1
        end
    elseif code == 28 then  -- Enter
        if state.selectedButton == 1 then
            state.currentScreen = "slots"
        elseif state.selectedButton == 2 then
            state.currentScreen = "roulette"
        elseif state.selectedButton == 3 then
            state.currentScreen = "blackjack"
        end
        state.inputValue = ""
    elseif char == string.byte("q") or char == string.byte("Q") then
        return false  -- –í—ã—Ö–æ–¥
    end
    
    return true
end

-- ============================================================================
-- –ò–ì–†–ê: –°–õ–û–¢–´
-- ============================================================================

local function drawSlotsScreen()
    UI.clear()
    UI.drawHeader(state.playerName, state.balance)
    
    local w, h = gpu.getResolution()
    
    -- –°–ª–æ—Ç—ã
    local reels = state.slotsReels or {"üçí", "üçã", "üçä"}
    UI.drawSlots(reels, state.slotsSpinning or false)
    
    -- –í–≤–æ–¥ —Å—Ç–∞–≤–∫–∏
    UI.drawCentered(h / 2 + 8, "–°—Ç–∞–≤–∫–∞: (1-100‚ÇΩ)", UI.COLORS.WHITE)
    UI.drawInput(math.floor(w / 2) - 10, h / 2 + 10, 20, state.inputValue, true)
    
    -- –ö–Ω–æ–ø–∫–∞
    UI.drawButton(math.floor(w / 2) - 15, h / 2 + 13, "–ö–†–£–¢–ò–¢–¨", 30, true)
    
    -- –¢–∞–±–ª–∏—Ü–∞ –≤—ã–ø–ª–∞—Ç
    UI.drawPayoutTable(5, h / 2 - 5)
    
    -- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    UI.drawCentered(h - 3, "[Enter] –ö—Ä—É—Ç–∏—Ç—å  [Backspace] –ù–∞–∑–∞–¥", UI.COLORS.GRAY)
end

local function handleSlots()
    local _, _, char, code = event.pull("key_down")
    
    if code == 28 then  -- Enter
        local bet = tonumber(state.inputValue)
        if not bet or bet < CONFIG.MIN_BET or bet > CONFIG.MAX_BET then
            UI.showError("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç " .. CONFIG.MIN_BET .. " –¥–æ " .. CONFIG.MAX_BET)
            event.pull("key_down")
            return true
        end
        
        if bet > state.balance then
            UI.showError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
            event.pull("key_down")
            return true
        end
        
        -- –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        state.slotsSpinning = true
        drawSlotsScreen()
        
        for i = 1, 10 do
            state.slotsReels = {
                ({"üçí", "üçã", "üçä", "üçá", "üíé", "7Ô∏è‚É£", "‚≠ê"})[math.random(1, 7)],
                ({"üçí", "üçã", "üçä", "üçá", "üíé", "7Ô∏è‚É£", "‚≠ê"})[math.random(1, 7)],
                ({"üçí", "üçã", "üçä", "üçá", "üíé", "7Ô∏è‚É£", "‚≠ê"})[math.random(1, 7)]
            }
            drawSlotsScreen()
            os.sleep(0.1)
        end
        
        state.slotsSpinning = false
        
        -- –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞ –Ω–∞ —Å–µ—Ä–≤–µ—Ä
        UI.showLoading("–û–±—Ä–∞–±–æ—Ç–∫–∞...")
        local response, err = net:request(state.serverAddress, Network.MSG_TYPES.PLAY, {
            player = state.playerName,
            game = "slots",
            bet = bet
        }, 5)
        
        if not response or not response.success then
            UI.showError("–û—à–∏–±–∫–∞: " .. (err or response.error or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"))
            event.pull("key_down")
            return true
        end
        
        -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        state.slotsReels = response.reels
        state.balance = response.balance
        drawSlotsScreen()
        os.sleep(1)
        
        -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –æ–∫–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
        UI.drawResult(response, bet)
        event.pull("key_down")
        
        state.currentScreen = "menu"
        state.inputValue = ""
        
    elseif code == 14 then  -- Backspace
        if #state.inputValue > 0 then
            state.inputValue = string.sub(state.inputValue, 1, -2)
        else
            state.currentScreen = "menu"
            state.inputValue = ""
        end
    elseif char >= 48 and char <= 57 then  -- –¶–∏—Ñ—Ä—ã
        state.inputValue = state.inputValue .. string.char(char)
    end
    
    return true
end

-- ============================================================================
-- –ò–ì–†–ê: –†–£–õ–ï–¢–ö–ê
-- ============================================================================

local function drawRouletteScreen()
    UI.clear()
    UI.drawHeader(state.playerName, state.balance)
    
    local w, h = gpu.getResolution()
    
    -- –†—É–ª–µ—Ç–∫–∞
    UI.drawRoulette(state.rouletteNumber, state.rouletteColor, state.rouletteSpinning or false)
    
    -- –í–≤–æ–¥ —Å—Ç–∞–≤–∫–∏
    UI.drawCentered(h / 2 + 10, "–°—Ç–∞–≤–∫–∞: (1-100‚ÇΩ)", UI.COLORS.WHITE)
    UI.drawInput(math.floor(w / 2) - 10, h / 2 + 12, 20, state.inputValue, state.rouletteStep == 1)
    
    -- –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å—Ç–∞–≤–∫–∏
    if state.rouletteStep and state.rouletteStep >= 2 then
        UI.drawCentered(h / 2 + 15, "–¢–∏–ø —Å—Ç–∞–≤–∫–∏:", UI.COLORS.WHITE)
        
        local types = {
            {key = "1", name = "–ß–∏—Å–ª–æ (x35)"},
            {key = "2", name = "–ö—Ä–∞—Å–Ω–æ–µ (x2)"},
            {key = "3", name = "–ß–µ—Ä–Ω–æ–µ (x2)"},
            {key = "4", name = "–ß–µ—Ç–Ω–æ–µ (x2)"},
            {key = "5", name = "–ù–µ—á–µ—Ç–Ω–æ–µ (x2)"}
        }
        
        for i, t in ipairs(types) do
            local text = "[" .. t.key .. "] " .. t.name
            UI.drawCentered(h / 2 + 16 + i, text, UI.COLORS.WHITE)
        end
    end
    
    -- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    UI.drawCentered(h - 3, "[Enter] –î–∞–ª–µ–µ  [Backspace] –ù–∞–∑–∞–¥", UI.COLORS.GRAY)
end

local function handleRoulette()
    state.rouletteStep = state.rouletteStep or 1
    
    local _, _, char, code = event.pull("key_down")
    
    if code == 28 then  -- Enter
        if state.rouletteStep == 1 then
            -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞–≤–∫–∏
            local bet = tonumber(state.inputValue)
            if not bet or bet < CONFIG.MIN_BET or bet > CONFIG.MAX_BET then
                UI.showError("–°—Ç–∞–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –æ—Ç " .. CONFIG.MIN_BET .. " –¥–æ " .. CONFIG.MAX_BET)
                event.pull("key_down")
                return true
            end
            
            if bet > state.balance then
                UI.showError("–ù–µ–¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ —Å—Ä–µ–¥—Å—Ç–≤!")
                event.pull("key_down")
                return true
            end
            
            state.rouletteBet = bet
            state.rouletteStep = 2
            
        elseif state.rouletteStep == 2 then
            -- –û–∂–∏–¥–∞–Ω–∏–µ –≤—ã–±–æ—Ä–∞ —Ç–∏–ø–∞ —Å—Ç–∞–≤–∫–∏
            return true
        end
        
    elseif code == 14 then  -- Backspace
        if state.rouletteStep == 2 then
            state.rouletteStep = 1
            state.inputValue = tostring(state.rouletteBet or "")
        elseif #state.inputValue > 0 then
            state.inputValue = string.sub(state.inputValue, 1, -2)
        else
            state.currentScreen = "menu"
            state.inputValue = ""
            state.rouletteStep = nil
        end
        
    elseif state.rouletteStep == 1 and char >= 48 and char <= 57 then  -- –¶–∏—Ñ—Ä—ã –Ω–∞ —à–∞–≥–µ 1
        state.inputValue = state.inputValue .. string.char(char)
        
    elseif state.rouletteStep == 2 then  -- –í—ã–±–æ—Ä —Ç–∏–ø–∞ —Å—Ç–∞–≤–∫–∏
        local betType, betValue
        
        if char == string.byte("1") then
            betType = "number"
            -- –ó–∞–ø—Ä–æ—Å–∏—Ç—å —á–∏—Å–ª–æ
            UI.showMessage("–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ", "–í–≤–µ–¥–∏—Ç–µ —á–∏—Å–ª–æ –æ—Ç 0 –¥–æ 36", UI.COLORS.GOLD)
            event.pull("key_down")
            -- TODO: –†–µ–∞–ª–∏–∑–æ–≤–∞—Ç—å –≤–≤–æ–¥ —á–∏—Å–ª–∞
            betValue = "0"
        elseif char == string.byte("2") then
            betType = "red"
            betValue = nil
        elseif char == string.byte("3") then
            betType = "black"
            betValue = nil
        elseif char == string.byte("4") then
            betType = "even"
            betValue = nil
        elseif char == string.byte("5") then
            betType = "odd"
            betValue = nil
        else
            return true
        end
        
        -- –ê–Ω–∏–º–∞—Ü–∏—è –≤—Ä–∞—â–µ–Ω–∏—è
        state.rouletteSpinning = true
        drawRouletteScreen()
        os.sleep(2)
        state.rouletteSpinning = false
        
        -- –û—Ç–ø—Ä–∞–≤–∫–∞ –∑–∞–ø—Ä–æ—Å–∞
        UI.showLoading("–û–±—Ä–∞–±–æ—Ç–∫–∞...")
        local response, err = net:request(state.serverAddress, Network.MSG_TYPES.PLAY, {
            player = state.playerName,
            game = "roulette",
            bet = state.rouletteBet,
            betType = betType,
            betValue = betValue
        }, 5)
        
        if not response or not response.success then
            UI.showError("–û—à–∏–±–∫–∞: " .. (err or response.error or "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞"))
            event.pull("key_down")
            state.currentScreen = "menu"
            return true
        end
        
        -- –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        state.rouletteNumber = response.number
        state.rouletteColor = response.color
        state.balance = response.balance
        drawRouletteScreen()
        os.sleep(2)
        
        UI.drawResult(response, state.rouletteBet)
        event.pull("key_down")
        
        state.currentScreen = "menu"
        state.inputValue = ""
        state.rouletteStep = nil
    end
    
    return true
end

-- ============================================================================
-- –ò–ì–†–ê: –ë–õ–≠–ö–î–ñ–ï–ö
-- ============================================================================

local function drawBlackjackScreen()
    UI.clear()
    UI.drawHeader(state.playerName, state.balance)
    
    local w, h = gpu.getResolution()
    
    if not state.blackjackGameState or state.blackjackGameState.stage == "bet" then
        -- –≠–∫—Ä–∞–Ω –≤–≤–æ–¥–∞ —Å—Ç–∞–≤–∫–∏
        UI.drawCentered(h / 2 - 2, "üÉè –ë–õ–≠–ö–î–ñ–ï–ö", UI.COLORS.GOLD)
        UI.drawCentered(h / 2, "–°—Ç–∞–≤–∫–∞: (1-100‚ÇΩ)", UI.COLORS.WHITE)
        UI.drawInput(math.floor(w / 2) - 10, h / 2 + 2, 20, state.inputValue, true)
        UI.drawButton(math.floor(w / 2) - 10, h / 2 + 5, "–ù–ê–ß–ê–¢–¨ –ò–ì–†–£", 20, true)
    else
        -- –ò–≥—Ä–æ–≤–æ–π —ç–∫—Ä–∞–Ω
        local gameState = state.blackjackGameState
        
        -- –†—É–∫–∞ –¥–∏–ª–µ—Ä–∞
        local dealerValue = "?"
        local hideSecond = gameState.stage ~= "finished"
        
        if gameState.stage == "finished" then
            local sum = 0
            for _, card in ipairs(gameState.dealerHand) do
                local val = card.rank == "A" and 11 or (card.rank == "J" or card.rank == "Q" or card.rank == "K") and 10 or tonumber(card.rank)
                sum = sum + val
            end
            dealerValue = tostring(sum)
        end
        
        UI.drawBlackjackHand(10, 5, gameState.dealerHand, "–î–ò–õ–ï–†", dealerValue, hideSecond)
        
        -- –†—É–∫–∞ –∏–≥—Ä–æ–∫–∞
        if gameState.playerHand then
            local playerValue = gameState.playerValue or 0
            UI.drawBlackjackHand(10, 12, gameState.playerHand, "–í–´", playerValue, false)
        end
        
        -- –ö–Ω–æ–ø–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π
        if gameState.stage == "player_turn" then
            UI.drawButton(20, h - 8, "HIT (–í–∑—è—Ç—å)", 20, state.selectedButton == 1)
            UI.drawButton(45, h - 8, "STAND (–°—Ç–æ–ø)", 20, state.selectedButton == 2)
            UI.drawButton(70, h - 8, "DOUBLE (x2)", 20, state.selectedButton == 3)
        end
    end
    
    -- –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ
    UI.drawCentered(h - 3, "[‚Üê/‚Üí] –í—ã–±–æ—Ä  [Enter] –ü–æ–¥—Ç–≤–µ—Ä–¥–∏—Ç—å  [Backspace] –ù–∞–∑–∞–¥", UI.COLORS.GRAY)
end

local function handleBlackjack()
    -- –ü—Ä–æ–¥–æ–ª–∂–µ–Ω–∏–µ –≤ —Å–ª–µ–¥—É—é—â–µ–π —á–∞—Å—Ç–∏...
    state.currentScreen = "menu"
    UI.showMessage("–í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ", "–ò–≥—Ä–∞ –ë–ª—ç–∫–¥–∂–µ–∫ —Å–∫–æ—Ä–æ –±—É–¥–µ—Ç –¥–æ—Å—Ç—É–ø–Ω–∞!", UI.COLORS.YELLOW)
    event.pull("key_down")
    return true
end

-- ============================================================================
-- –ì–õ–ê–í–ù–´–ô –¶–ò–ö–õ
-- ============================================================================

local function main()
    math.randomseed(os.time())
    
    -- –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è —ç–∫—Ä–∞–Ω–∞
    local w, h = gpu.getResolution()
    if w < 80 or h < 25 then
        print("–û—à–∏–±–∫–∞: –¢—Ä–µ–±—É–µ—Ç—Å—è —ç–∫—Ä–∞–Ω Tier 2 –∏–ª–∏ –≤—ã—à–µ (–º–∏–Ω–∏–º—É–º 80x25)")
        return
    end
    
    -- –ì–ª–∞–≤–Ω—ã–π —Ü–∏–∫–ª
    while true do
        if state.currentScreen == "login" then
            drawLoginScreen()
            local _, _, char, code = event.pull("key_down")
            
            if code == 28 then  -- Enter
                handleLogin()
            elseif code == 14 and #state.inputValue > 0 then  -- Backspace
                state.inputValue = string.sub(state.inputValue, 1, -2)
            elseif char and char >= 32 and char < 127 then
                state.inputValue = state.inputValue .. string.char(char)
            end
            
        elseif state.currentScreen == "menu" then
            drawMainMenu()
            if not handleMainMenu() then
                break
            end
            
        elseif state.currentScreen == "slots" then
            drawSlotsScreen()
            if not handleSlots() then
                break
            end
            
        elseif state.currentScreen == "roulette" then
            drawRouletteScreen()
            if not handleRoulette() then
                break
            end
            
        elseif state.currentScreen == "blackjack" then
            drawBlackjackScreen()
            if not handleBlackjack() then
                break
            end
        end
    end
    
    -- –í—ã—Ö–æ–¥
    UI.clear()
    print("–°–ø–∞—Å–∏–±–æ –∑–∞ –∏–≥—Ä—É –≤ –∫–∞–∑–∏–Ω–æ Spartak!")
end

-- –ó–∞–ø—É—Å–∫ —Å –æ–±—Ä–∞–±–æ—Ç–∫–æ–π –æ—à–∏–±–æ–∫
local success, err = pcall(main)
if not success then
    print("–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: " .. tostring(err))
end

